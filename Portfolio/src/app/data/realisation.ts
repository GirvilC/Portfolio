export interface Realisation {
    id: string;
    titre: string;
    introduction: string;
    objectif: string;
    cHumain: string;
    cTechnique: string;
    enjeu: string;
    organisation: string;
    realisation: string;
    fin: string;
    retiens: string;
    liensVersRealisations: string[];
    liensVersCompetences: string[];
    nomImage: string;
}

export const REALISATIONS: Realisation[] = [
    {
        id: 'ads',
        titre: 'CDS ADS',
        introduction: `<p>Ce projet a été réalisé durant mes six mois de stage au sein de l’entreprise Capgemini Engineering. La mission consiste à créer une application permettant aux managers de la branche « Airbus Defense and Space » (ADS) d’intégrer les bons de commande au sein de l’application pour les stocker et en extraire des informations.</p> 
                        <p>Ce projet n’a aucun antécédent, il comportera donc une phase d’étude puis une phase de développement.</p> 
                        <p>Je ne fais partie d’aucune équipe, je serai donc seul à travailler sur l’application avec une aide potentielle d’un superviseur technique. Le client est un manager de la branche, et la méthodologie Scrum a été choisie pour gérer le projet.</p> 
                        <p>Il y a donc au sein de ce projet, une perspective de communication régulière dû à la méthodologie, ce qui implique de bien cerner les demandes du client ainsi que d’être force de proposition pour améliorer l’application et leurs idées.</p>`,
        objectif: `<p>Comme énoncé dans l’introduction, cette application va comporter plusieurs services. Tout d’abord, un système récupérant les fichiers de bon de commande et en récupérer les données, ensuite afficher les données récupérées et automatisées des calculs pour enfin permettre l’extraction de données conservées dans l’application.</p>
                    <p>La phase d’étude de l’application pour définir les technologies à adapter et de bien comprendre les besoins clients sera le premier objectif. </p>
                    <p>Enfin les trois prochains objectifs suivront la logique d’utilisation de l’application. Tout d’abord nous aurons la récupération des données contenues dans le PDF du bon de commande, ensuite le traitement des données récupérées et leurs affichages, pour terminer l’extraction de données demandées par l’utilisateur.</p>`,
        cHumain: `<p>Le groupe projet est constitué d’un seul membre qui n’est autre que moi-même en tant que développeur et aussi Scrum master. Un superviseur technique m’avait été attribué afin de m’apporter de l’aide si besoin ainsi que de me guider au travers des technologies que je pourrais ne pas connaître.</p> 
                    <p>Concernant le client, un manager de la branche qui était aussi mon responsable de stage a été désigné pour remplir ce rôle. En tant que futur utilisateur de l’application, il connaissait les besoins nécessaires à celle-ci et a su me les décrire durant la période de travail.</p>`,
        cTechnique: `<p>Concernant la partie technique du projet, le Framework Angular est utilisé pour l’interface utilisateur, le langage Javascript est celui pour l’API REST et enfin une base de données relationnelle en SQL a été mise en place. Ce projet comporte plusieurs objets.</p> 
                    <p>Pour le versioning du projet et pour faciliter la gestion du code j’ai utilisé Gitlab tout au long de la période de travail.</p>`,
        enjeu: `<p>Au sein du projet je pouvais rencontrer un enjeu de taille qui n’était autre que la sauvegarde des données. Ces dernières sont considérées comme des données sensibles qui seront à destination d’une future facturation. Il a fallu s’assurer que dans leurs récupérations depuis le fichier du bon de commande, aucun changement ne soit effectué sur celles-ci. Cela vaut aussi pour la partie calcul mais également pour la partie extraction. J’ai révisé plusieurs fois mes calculs afin de m’assurer que les bons calculs étaient mis en place et que les résultats retrouvés semblaient correspondre. </p> 
                <p>Un risque, rencontré à la fois pendant la phase d’étude mais aussi pendant la phase de développement de la partie récupération des données, a été le modèle des bons de commande. Effectivement nous en viendrons plus en détails plus tard mais la récupération des données est réalisée en se basant sur le modèle de disposition en vigueur lors du développement. Si le modèle venait à changer alors le code de récupération serait lui aussi à changer.</p>`,
        organisation: `<p>Ici l’organisation était assez simpliste, étant seul membre du groupe projet il n’y avait donc pas de répartition de tâches. J’avais tout de même réalisé un plan d’organisation sur les différentes tâches à réaliser et l’ordre de priorité sur lesquelles je devais me concentrer. En premier lieu, j’allais me concentrer sur la phase d’étude, de manière que je sois bien préparé à me lancer sur le projet.  Par la suite je m’étais indiqué que l’ordre de priorité serait le même que la logique d’utilisation de l’application, étant donné que cette dernière fonctionne en un seul et même bloc, aucune étape ne peut être réalisée sans que la précédente ne soit elle-même accomplie.</p>
                        <p>Pour tenir informé le client de mon avancée dans le développement ainsi que lui faire une démonstration de l’application à ce moment-là et aussi pour connaître la suite des fonctionnalités à implémenter, une réunion hebdomadaire était convenue. Enfin une réunion bi-hebdomadaire était mise en place avec mon superviseur technique pour parler des points bloquants, d’outil particulier utilisé au sein de l’application ou alors pour demander des conseils sur mon avancée.</p>`,
        realisation: `<h4>Phase d'étude</h4>
                        <p>Comme énoncé plusieurs fois, pour commencer le projet j’ai décidé de faire une phase d’étude car n’ayant aucun antécédent à l’application il faudra savoir quelles technologies utiliser. Au cours de cette phase, j’ai réalisé un document concernant les différentes technologies à utiliser et les arguments d’utilisation. Ce document a été présenté à mon superviseur technique afin d’avoir son avis mais aussi sa confirmation sur ce que je pourrais employer.</p>
                        <p>Finalement, la technologie qui sera retenue pour la partie interface utilisateur a été le framework « Angular », issue du langage « Typescript ». C’est un framework permettant la création de composants ainsi que leurs assemblages pour leurs utilisations. L’avantage que possède Angular est sa maintenabilité aisée dû à son architecture en composant. Si le développeur a été clair dans sa façon de faire, il n’y a généralement pas grand-chose à modifier mis à part les éléments contenus dans un composant. Cet argument était le principal qui a conduit à l’utilisation d’Angular au sein de l’application car ce serait un point important et nécessaire au vu des objectifs du client. On savait que l’application serait amenée à être retravailler dans le futur. Un second argument a été sa forte présence dans les projets récents, Angular est un framework qui se démocratise de plus en plus et au regard de cette croissance de popularité, la documentation ainsi que les conseils autour sont d’autant plus nombreux et les développeurs le pratiquant aussi. En choisissant donc ce framework, on augmentait les chances d’avoir un repreneur du projet connaissant le langage.</p>
                        <p>Pour la construction de l’API REST le langage retenu a été « Javascript » avec son environnement d’exécution « NodeJS ». Pour celui-ci l’argument principal a été la librairie permettant l’extraction de données au sein d’un PDF. A l’origine deux langages étaient en opposition pour l’API : le premier étant C# et le second Javascript. Mais après quelques recherches il s’est avéré que C# contenait des librairies pouvant traiter les données d’un PDF mais nécessitant une licence payante, alors que celle de Javascript était gratuite bien que plus dure à mettre en place. Le second argument envers Javascript a aussi été son utilisation grandissante et sa polyvalence, de même que pour Angular avoir un langage grandement pratiqué est très pratique. </p>
                        <p>Enfin pour la base de données, le langage SQL a été conservée ici principalement par aisance avec son utilisation. Etant un langage grandement vu au cours de mon cursus, je savais que ce serait le plus simple à mettre en place dans l’application.</p>
                        <h4>Extraction des données depuis le fichier d'entrée</h4>
                        <p>Pour que l’utilisateur puisse renseigner son fichier de commande il avait un emplacement dans l’application lui permettant d’ajouter son fichier dans le système de l’application pour qu’il soit traité.</p>
                        <p>La principale partie des données qui était à récupérer se trouvait au sein d’un PDF en plusieurs pages. Ce fichier était issu tout d’abord d’un fichier Excel converti en PDF. Grâce à la librairie trouvée au sein de Javascript j’ai pu mettre en place un algorithme permettant de le parcourir, en utilisant les coordonnées des cases du PDF, je pouvais accéder au contenu de chaque case et donc récupérer ce qui était écrit à l’intérieur. La difficulté de cette méthode était que le code devenait obsolète si le modèle de création des bons de commande changeait. Après plusieurs recherches en compagnie de mon superviseur technique aucune méthode meilleure que celle énoncée fut trouvée. Malgré tout j’ai eu de grosses difficultés à mettre cet algorithme en place, j’ai dû faire face à un grand nombre de blocage étant donné la complexité du traitement d’un PDF. La période de réalisation de cet algorithme fût la période où j’ai le plus sollicité mon superviseur technique pour ne pas perdre trop de temps inutilement à chercher une solution que je ne pourrais trouver. Cette période de création de l’algorithme avait été anticipé lors de la phase de conception car avec mon superviseur technique nous avions déterminé cette phase comme la plus complexe à mettre en place dû à l’inconnu sur ce fameux traitement.</p>
                        <p>L’algorithme se comportait de cette manière : tout d’abord une fois que le fichier était chargé l’algorithme réalise une première boucle pour parcourir le fichier selon le nombre de données à devoir être récupérer, les données sont localisées en premier lieu en utilisant les coordonnées du fichier, en commençant par le bas, le fichier peut posséder des coordonnées en utilisant les pixels qui le composent. C’est cette méthode qui a été retenu car bien qu’à première vue elle n’a pas l’air très pratique, c’était la méthode la plus simple que j’avais en ma possession. A chaque fois que l’algorithme arrive à une case où la donnée doit être récupérer, une première vérification est faite avant d’intégrer la donnée dans un tableau qui va donc regrouper toutes les valeurs.</p>
                        <p>Cet algorithme, une fois les différentes données récupérées, les envoyait en base de données en faisant un appel à l’API avec la méthode POST permettant ainsi d’intégrer des données dans le corps de l’appel, afin de les stocker et de permettre leur utilisation plus tard pour les prochaines parties de l’application.</p>
                        <h4>Affichage des données et calculs</h4>
                        <p>Si l’utilisateur voulait consulter les données qu’il venait de charger il devait se rendre sur la page d’affichage en cliquant sur le bouton correspondant, contenant les différentes commandes avec un tri réalisé sur toutes celles disponible par ordre croissant d’ancienneté.</p>
                        <p>Pour cette page, j’ai utilisé un appel GET à la base de données contenant toutes les données déjà renseignées pour l’utilisateur actif. Si l’utilisateur voulait consulter les données d’une commande, l’utilisation du bouton se trouvant sur la commande pouvait l’emmener sur la page avec les données demandées en détail car une bonne partie des données ne pouvant être affiché sur la page des commandes il fallait une page permettant de les consulter. Sur cette page, on pouvait retrouver les différentes informations contenues dans le fichier, mais aussi des données calculées à partir de celles-ci qui à la base était faites à la main. Enfin trois listes déroulantes permettaient à l’utilisateur de sélectionner des données non renseignées dans le fichier bien qu’utile malgré tout. Si la modification avait lieu, l’utilisateur devait cliquer sur un bouton pour pouvoir confirmer les modifications créant au passage un appel PUT vers la base de données pour appliquer les changements demandés par l’utilisateur. En revanche si finalement il ne souhaitant pas appliquer les changements, un bouton annuler permettait de ne pas prendre en compte les changements et par la même occasion, le ramenait à la page des commandes.</p>
                        <p>Cette partie a été beaucoup retravaillée, bien qu’elle ne fût pas particulièrement complexe, elle demandait beaucoup d’informations différentes que le client n’avait pas à chaque itération.</p>
                        <h4>Extraction des données depuis l'application</h4>
                        <p>Finalement la dernière partie de l’application se retrouvant dans le bandeau d’en-tête était la partie permettant de récupérer les données dans un fichier csv afin qu’elles puissent être utilisées pour la facturation.</p>
                        <p>Pour cette fonctionnalité l’utilisateur avait un affichage lui permettant de sélectionner le bon de commande qu’il voulait utiliser ainsi que les données qu’il voulait récupérer afin qu’elles soient téléchargées dans le fichier de sortie. Une fois que l’utilisateur avait renseigné les données qu’il voulait reprendre, une nouvelle requête GET était d’abord envoyée à l’API de l’application qui traitait la requête en envoyant une seconde à la base de données pour récupérer les données souhaitées et les envoyer enfin à l’interface. Une fois les données récupérées depuis la base de données, un fichier CSV était créé pour par la suite venir intégrer les données récupérées de manière ordonnée selon le souhait du client.</p>`,
        fin: `<p>Pour clore le projet, une réunion avec d’autres managers et futurs utilisateurs de l’application a été réalisée pour démontrer le travail réalisé et acquérir leurs avis sur la construction de l’application. A la suite de la réunion, quelques retouches ont été réalisées principalement sur l’ergonomie de l’application mais aussi de l’affichage des données dans le fichier CSV afin de correspondre aux critiques reçues durant cette réunion.</p>
                <p>Pour finir, une fois les retouches faite, l’application a été remise au manager qui jouait le rôle du client sous la forme d’un dossier compressé contenant tout le code source. Etant un projet réalisé en interne, il ne souhaitait pas débloquer du budget pour pouvoir héberger cette application. Cette dernière sera donc partagée par le biais du code source à tous les managers souhaitant l’utiliser et ils devront lancer l’application en local pour pouvoir y accéder, selon le souhait du client.</p>
                <p>On sait que de futures améliorations étaient déjà prévu avant le rendu de l’application, quelques mois après il était prévu que le modèle de présentation des bons de commande change pour faire apparaître de nouvelles données. Comme précisé ultérieurement, l’extraction des données est réalisée de manière à suivre exactement, aux coordonnées près, la localisation des valeurs. Aussi le temps manquant certaines fonctionnalités n’a pu être mises en place. </p>`,
        retiens: "Ce projet m’a permis de mieux comprendre l’extraction de données d’un fichier PDF qui reste un fichier protégé et donc difficile d’accès et que je n’avais encore jamais fait. Cela m’a aussi permis de renforcer mes connaissances dans les langages que je pratiquais déjà et d’être plus confiant quant à leurs utilisations par le futur. Enfin j’ai pu aussi comprendre l’architecture d’une API REST par l’utilisation du langage Javascript.",
        liensVersRealisations: [],
        liensVersCompetences: ['javascript', 'angular', 'sql', 'benchmarking', 'agile', 'nodejs', 'adaptation'],
        nomImage: 'ImageBonCommande.png'
    },
    {
        id: 'amt',
        titre: 'CDS AMT',
        introduction: `<p>Mon arrivée en alternance au sein de mon entreprise s’est effectuée sur la fin d’année civile. Souvent en fin d’année pas mal de contrats arrivent à terme et la plupart des budgets sont réduits, ce qui fait que j’ai été placé sur un projet interne jusqu’au début de la prochaine année. L’application est un centre de service, application permettant de traiter des bons de commande sous certaines formes pour en extraire les données importantes, automatiser des calculs financiers et pouvoir extraire les résultats des différents traitements. Cette application vise à faciliter le travail des managers en lien avec AMT (Airbus Mathematic & Technologies).</p>
                        <p>Ce projet possède déjà une application existante créée au préalable avec le langage Python. Mon but sera d’améliorer l’application selon certains besoins et de corriger les éventuels problèmes existants.</p>
                        <p>Etant un petit projet interne à l’entreprise, il n’y a pas d’équipe travaillant régulièrement dessus, ce qui fait que pour la période de fin d’année je serais seul développeur.</p>
                        <p>L’enjeu principal de ce projet pour moi sera d’apprendre le développement Python sur un existant, en effet avant ça je n’avais encore jamais travaillé avec Python. Découvrir le langage sur une base déjà existante et, étant donné que le code source déjà présent est très peu commenté a été une véritable épreuve pour moi.</p>                
                        `,
        objectif: `<p>Comme énoncé déjà dans l’introduction, les principales étapes de ce projet seront d’ajouter des fonctionnalités et de corriger les problèmes afin que l’application soit utilisable. Aussi j’ai pris l’initiative d’améliorer la qualité du code (en rajoutant principalement des commentaires sur les fonctions importantes) afin de faciliter une meilleure reprise de l’application dont on m’avait dit qu’il serait très probable d’arriver dans le futur.</p>
                    <p>Pour faire une passe plus précisément sur les fonctionnalités qui seront à implémenter, il y aura : traitement d’un tableau dans les bons de commande pas encore pris en compte dans la récupération des données, automatisation des calculs et ajout d’un nouveau type d’extraction des données pour l’utilisateur.</p>
                    `,
        cHumain: `<p>Pour le coup cette fois-ci le contexte humain au niveau de l’équipe est assez mince étant donné que je suis le seul développeur sur le projet. J’arriverai après quelques temps passés sur le projet à avoir le contact d’un expert Python qui m’aidera à implémenter certaines fonctions dans l’application quand j’aurai de trop grands blocages mais en dehors de ça il n’y aura pas d’autres intervenants.</p>
                    <p>Concernant le client vu que ça concerne toute une branche de mon entreprise, j’aurai un manager de cette branche qui servira d’interlocuteur avec moi. Il a lui-même déjà travaillé sur l’application et a une idée très précise de l’utilisation de celle-ci car il s’en sert déjà au quotidien dans ses tâches sur la version non terminée.</p>
                    `,
        cTechnique: `<p>De même pour cette partie que j’ai déjà commencé à parler dans l’introduction, il y aura peu de choses à en dire. L’application est développée entièrement en Python, c’est un logiciel en dur qui est lancé à la main par l’utilisateur et qui ne requiert aucune base de données ou de connexion à une quelconque API.</p>
                        <p>Pour la gestion du code il n’y a pas de gestion de configuration mise en place, je travaille directement sur le code source et les futurs utilisateurs auront à se passer le code source entre eux pour pouvoir l’utiliser. J’avais essayé de pousser l’utilisation d’une gestion de configuration pour faciliter le développement mais cela m’avait été refusé.</p>`,
        enjeu: `<p>Ici l’enjeu sera simplement de réussir à mettre en place les fonctionnalités demandées dans un temps imparti. Il n’y a aucun traitement de donnée sensible ou même d’impératif sur la manière de faire, je suis là principalement pour apprendre et améliorer l’application.</p>`,
        organisation: `<p>N’ayant aucune autre personne avec moi, je me suis organisé à ma manière et j’ai passé le moins de temps possible sur la mise en place d’un schéma de travail. Je me suis mis sur les différentes tâches dans un ordre arbitraire et si en cours de chemin sur l’implémentation d’une fonctionnalité je rencontré un « bug » j’essayais de le traiter avant de continuer ma tâche en cours.</p>`,
        realisation: `<h4>Traitement du tableau manquant</h4>
                        <p>Les bons de commande que traitent les managers de la branche se décomposent en plusieurs tableaux d’informations divers et variés. L’un des tableaux n’étant pas encore utilisé par l’application mon but est de changer ça. Pour ce faire j’ai d’abord fait un tour du code déjà mis en place pour mieux comprendre comment est-ce que les autres tableaux étaient impactés. Une fois cette partie comprise (et après l’ajout de quelques commentaires qui n’étaient pas présents mais nécessaire pour gagner du temps) et après quelques tests, j’ai pu commencer la mise en place d’un système similaire pour ma partie. La récupération de données fût assez simple, le fichier d’entrée est en format Excel, ce format de fichier permet d’accéder à chaque cellule qui le composent ainsi que les valeurs qu’elles contiennent. A chaque fois que je récupérais une valeur je la plaçais dans un « dataframe » en utilisant la librairie pandas.</p>
                        <p>Une fois toutes les données dans le dataframe je devais passer à la prochaine étape : trier toutes les données pour ne garder que celles importantes, et ce en utilisant plusieurs instructions conditionnelles (if). Le tri fût assez simple, je récupérais les données dans un premier tableau et il me fallait parcourir ce tableau pour récupérer les données nécessaires que je plaçais dans un autre tableau pour mieux m’y retrouver.</p>
                        <p>Enfin une fois toutes les données triées, je devais mettre en place certains calculs pour toute la partie financière mais aussi certains textes qui indiquaient des manières de calculer. Une fois toute cette partie terminée, je devais ajouter toutes les données importantes dans un dernier tableau qui regroupait toutes les futures informations à exporter en dehors de l’application.</p>
                        <h4>Implémentation de calcul manquant</h4>
                        <p>Partie assez brève, cette fois-ci l’enjeu technologique était assez faible car j’avais des calculs précis qui m’ont été donnés par le manager que je devais retrouver dans l’application soit pour les modifier s’ils étaient erronés car ils avaient changé entre temps ou alors s’ils manquaient et donc devaient être implémentés.</p>
                        <h4>Ajout d’un nouveau système d’exportation</h4>
                        <p>Enfin la dernière partie de mon travail consistait à ajouter une nouvelle manière d’exporter les données traitées par l’application. Il existait déjà la possibilité d’exporter les données dans un fichier « .csv », ajoutant toutes les valeurs et un label associé dans un grand tableau. Un souhait du manager me suivant était d’ajouter la possibilité d’exporter les données dans un format « .docx ». La manière de présenter au sein de ce fichier changeait assez peu car la forme restait l’utilisation de tableau. Mais cette fois-ci, il y en avait plusieurs pour séparer les différentes informations en catégorie selon ce qui était concerné. Pour ce faire, j’ai utilisé la librairie python-docx, qui permet d’écrire directement les informations issues du dataframe dans un fichier .docx, après les avoir organisées en tableaux.</p>
                        `,
        fin: `<p>A l’approche de la nouvelle année et du terme de mon travail sur l’application, j’ai réalisé une petite démonstration de ce qui avait été fait pour m’assurer qu’aucune erreur n’était présente et pour recueillir l’avis du manager ayant le rôle de client. Pour donner suite à cette démonstration, j’ai eu un retour positif de sa part me disant que les fonctionnalités étaient bien implémentées et qu’aucun bug n’avait été repéré. </p>
                <p>A la suite de cette réunion j’ai revérifié une dernière fois le code que j’avais réalisé pour vérifier que les commentaires étaient bien présents pour aider les futurs repreneurs, ainsi que les noms des variables que j’ai utilisés, puis j’ai rendu le dossier contenant le code source au manager pour permettre son utilisation. </p>
                <p>Comme dit précédemment l’application est lancée en local sur les postes des personnes souhaitant l’utiliser, c’est pourquoi la livraison du projet s’est effectuée de cette manière et que je n’ai pas travaillé sur un moyen de créer un exécutable pour faciliter son utilisation.</p>
                <p>Je sais qu’encore aujourd’hui, tous les managers de la branche concernée continue d’utiliser l’application de cette manière et de ce que j’ai pu entendre, le format que j’ai ajouté ainsi que les nouveaux calculs sont très utilisés quotidiennement car ils portent sur un client ayant obtenu des contrats assez récemment avec mon entreprise.</p>
                <p>Je n’ai pas eu beaucoup d’information sur le long terme de l’application, mais je peux supposer qu’elle n’évoluera que très peu au fil des années, c’est un projet sur lesquelles ils mettent généralement des stagiaires ou de jeunes alternants sans projet client ce qui fait que l’application n’est pas souvent retravaillée et qu’une version plus poussée que ce soit web ou avec un exécutable ne verra peut-être pas le jour de suite. En tout cas je sais qu’elle risque au moins d’avoir des améliorations sur des nouveaux formats à traités à parti des bons de commande ou encore sur de nouveaux formats d’export si nécessaire.</p>`,
        retiens: `<p>Le but de mon passage sur cette application aura été d’apprendre et de commencer à maîtriser le langage Python, langage grandement utilisé au sein de mon entreprise. Il était nécessaire d’en apprendre les bases et certains points assez poussés. Objectif que j’estime avoir accompli, bien que j’aie pu mettre quelques fois un peu trop de temps sur certaines tâches, j’ai pu directement apprendre le langage en travaillant sur quelque chose de réel et déjà bien structuré pour avoir les bases d’appliquer.</p>
                    <p>Au final, en l’espace de trois mois j’ai eu le sentiment d’avoir compris le langage et ses fondamentaux tout en participant activement à l’aide des managers avec lesquels je travaille encore actuellement.</p>`,
        liensVersRealisations: [],
        liensVersCompetences: ['python', 'agile', 'communication', 'adaptation'],
        nomImage: 'ImageBonCommande.png'
    },
    {
        id: 'archweb',
        titre: 'WebArch',
        introduction: `<p>Arch’Web est le tout premier projet que j’ai réalisé au sein de l’école pendant mon premier semestre. Le but de ce projet est de créer, pour le commanditaire, un site vitrine présentant son activité d’architecte, ses réalisations, ainsi que d’autres éléments qu’il nous avait communiqués.</p>
                        <p>Comme ce projet s’adressait à de jeunes étudiants, dont certains découvraient le développement informatique, l’école avait choisi des projets entièrement nouveaux, afin d’éviter d’avoir à analyser un existant.</p>
                        <p>Mon groupe de projet était composé de quatre personnes, nous étions tous développeurs dont l’un devait aussi assumer le rôle de chef de projet, chargé de répartir les tâches et d’assurer la communication avec le commanditaire.</p>
                        <p>Le but principal de ce projet était de nous initier aux méthodes de travail en entreprise en adoptant une organisation par projet, mais aussi de mettre en pratique les notions vues pendant les cours du semestre concernant les technologies.</p>`,
        objectif: `<p>Comme indiqué précédemment, le projet consiste à créer un site vitrine présentant un métier. Pour ce faire je suis passé par quatre objectifs différents : </p>
                    <ul>
                        <li>l’étude du cahier des charges et du périmètre du projet </li>
                        <li>la conception de l’application </li>
                        <li>le développement de l’interface utilisateur </li>
                        <li>le développement du serveur.</li>
                    </ul>
                    <p>Le premier objectif vise à faire la définition d’un cahier des charges permettant de connaître les besoins que la solution aura à remplir. Par la suite, l’équipe de développement s’occupe d’analyser les besoins décrits dans le cahier des charges mais aussi d’étudier tout ce qui entoure le projet c’est-à-dire : temps de travail, ressources humaines et outils mis à disposition.</p>
                    <p>Le deuxième objectif concerne la conception de l’application avant son développement. Cela passe par la création de plusieurs maquettes à proposer au client : construction d’une charte graphique si aucune n’existe, définition des technologies à utiliser si nécessaire et enfin définition de l’architecture de l’application à adopter.</p>
                    <p>Pour ce qui est du développement de l’interface utilisateur, l’objectif est évident. Le but va être, pour l’équipe de développement, de créer les fonctionnalités de l’interface du site, mettre en place la charte graphique et d’ajouter le contenu souhaité tout en suivant la maquette qui a été retenue à la suite de la phase de conception.</p>
                    <p>Enfin le dernier objectif est assez clair, le but est de mettre en place un serveur afin que l’application puisse être utilisée en local, comme demandé par l’école.</p>`,
        cHumain: `<p>L’équipe pour ce projet est constituée de quatre personnes. Comme il s’agit de notre tout premier projet au sein de l’école l’organisation de l’équipe est restée simple, avec seulement deux rôles : développeur et chef de projet. Tous les membres de l’équipe sont développeurs et l’un d’eux assure également le rôle de chef de projet.</p>
                    <p>Le commanditaire, de son côté, est architecte, c’est pour cela que le but du projet est de réaliser une application web décrivant son métier. Il souhaite pouvoir rediriger les personnes intéressées par son travail vers ce site afin qu’elles comprennent mieux son activité mais aussi de présenter ses réalisations.</p>`,
        cTechnique: `<p>Les technologies utilisées pour ce projet étaient relativement simples. L’interface utilisateur a été développée à l’aide de HTML et CSS et comportait une part de dynamisme grâce à l’utilisation de JavaScript.</p>
                        <p>Enfin, nous avons mis en place une gestion basique de configuration avec GitLab, afin de partager nos travaux.</p>`,
        enjeu: `En reprenant la présentation précédente on constate que ce projet présentait peu d’enjeux. En effet pour revenir sur le fait qu’il s’agissait de notre premier projet, l’école avait sélectionné des projets assez simples et ne présentant pas d’enjeux majeurs. L’enjeu principal était de terminer le projet avant la fin du semestre pour pouvoir livrer convenablement l’application web au client.`,
        organisation: `<p>L’organisation de ce projet au sein de l’équipe est restée très simple. Une fois que les maquettes du projet étaient validées nous avons listé chronologiquement les différentes tâches que nous aurions à réaliser. Une fois toutes les tâches rédigées, nous nous les sommes attribuées selon nos affinités en essayant de maintenir un équilibre de charge de travail. Une fois que quelqu’un terminait une tâche, l’un des autres membres de l’équipe s’occupait de faire des tests si nécessaire sur les fonctionnalités développées et ensuite le travail était mis en commun.</p>
                        <p>La communication avec le client était un peu plus désorganisée. Pour mon premier projet que ce soit en termes de réalisation ou en étant chef de projet je n’avais aucun exemple de la bonne démarche à suivre pour avoir une communication organisée avec le client. Plus précisément, je planifiais une réunion après avoir terminé une partie importante avec le commanditaire pour avoir son retour sur ce qui était implémenté et je le contactais ponctuellement en cas de besoin.</p>`,
        realisation: `<h4>Création des maquettes</h4>
                        <p>Une fois le cahier des charges étudié j’ai élaboré deux maquettes différentes. J’ai décidé de lui proposer deux structures de navigation différentes. La première étant divisée en plusieurs pages, un bouton correspondant à chaque section (Présentation, réalisation, contact, etc). La seconde proposition consistait en un site « one page » sur une seule page, contenant l’ensemble du contenu accessible par simple défilement. Ces deux approches ont permis au client de mieux visualiser l’application web qu’il souhaitait. Durant la réunion je lui ai présenté les deux maquettes, en expliquant la disposition du contenu dans chaque cas, finalement la maquette retenue a été celle du site en une seule page.</p>
                        <h4>Interface utilisateur</h4>
                        <p>Une fois que la maquette avait été décidée, il me fallait passer sur l’implémentation des différentes parties dont serait composée l’application. En effet le commanditaire avait déjà une idée assez précise des rubriques qu’il voulait avoir pour mieux décrire à la fois son métier et ses réalisations. Comme le développement était réalisé en HTML principalement, j’avais créé un seul fichier principal pour y intégrer tout le contenu à venir, étant un débutant dans la programmation, je ne me rendais pas encore compte que mon approche n’était pas la bonne.</p>
                        <p>En haut de la page, une section restait visible lors du défilement de l’utilisateur dans l’application il y avait le « haut de page », dans cette partie se trouvait un bandeau avec le logo de l’entreprise du commanditaire. Aucun bouton ne s’y trouvait comme on a l’habitude d’en retrouver sur d’autres sites car justement cette solution ne comportait pas d’autres pages auxquelles accéder.</p>
                        <p>Ensuite sur la partie la plus haute du contenu principal se trouvait la présentation de son activité dont il m’avait fait part. Elle était décorée d’images symbolisant les différentes thématiques abordées afin de fluidifier la lecture.</p>
                        <p>Si l’utilisateur descendait, on trouvait une section de présentation du client avec principalement une description de ses expériences passées ainsi que ses diplômes et une photo pour accompagner le texte.</p>
                        <p>En suivant se trouvait un carrousel d’images représentant les différentes réalisations les faisant défiler automatiquement et avec la possibilité pour l’utilisateur d’avoir un pop-up avec une fiche explicative et descriptive de la réalisation s’il cliquait sur la photo. Ce carrousel avait été réalisé en utilisant du code Javascript en plus pour pouvoir lier l’évènement du clic sur l’image à l’affichage du pop-up, ainsi que pour le défilement des images pour pouvoir y placer un certain temps d’affichage avant de passer à l’image suivante.</p>
                        <p>Enfin pour clore le contenu du site une présentation de l’entreprise du client avec sa région d’activité et quelques tarifs de présentation afin de donner un ordre d’idée aux futurs intéressés.</p>
                        <p>Tout en bas de la page se trouvait ce qu’on appelle « bas de page » et qui comportait les contacts vers le client, les mentions légales et la mention de l’équipe ayant réalisé le site web. </p>
                        <h4>Partie serveur</h4>
                        <p>À la demande de l'école, j'avais mis en place un petit serveur local pouvant accueillir l'application par l'utilisateur de NodeJS sans pouvoir utiliser d'autres librairies. Ce serveur a été mis en place principalement à des fins pédagogiques, le client n'aurait pas accès à cette partie car de son côté, une fois le semestre terminé, l'application sera hébergée pour être accessible depuis n'importe où.</p>`,
        fin: `<p>Afin de terminer le projet pour ce semestre, une réunion regroupant l’équipe de développement, le commanditaire et un représentant de l’école qui avait le rôle de suiveur sur le projet avait été organisée. Durant cette réunion une démonstration a eu lieu afin de montrer le résultat final réalisé par l’équipe suivie des commentaires du client sur la prestation et enfin la livraison finale du projet avec signature du procès-verbal de livraison.</p>
                <p>Concernant le déploiement de l’application, il n’a pas été pris en charge par l’équipe, l’école s’est occupée de cette partie avec le client. A ce jour l’application est encore utilisée par le client mais entre temps elle a peut-être évolué.</p>`,
        retiens: `<p>Ce projet m’a permis d’avoir un premier aperçu dans le fonctionnement de projets en entreprise, bien que ce n’était ni le même processus, ni les mêmes méthodes de travail c’était un premier pas intéressant et enrichissant. Aussi j’ai pu apprendre les bases des langages HTML, CSS et Javascript ainsi que la bibliothèque NodeJS, ce qui m’a permis d’avoir une première base avec des langages populaires dans le développement.</p>
                    <p>D’autant plus que ce premier projet m’a permis de découvrir le rôle de chef de projet, un aspect important pour commencer à me projeter pour le futur de ma carrière.</p>`,
        liensVersRealisations: [],
        liensVersCompetences: ['javascript', 'nodejs', 'communication', 'gestion', 'benchmarking'],
        nomImage: 'ImageArchi.jpg'
    },
    {
        id: 'plant',
        titre: 'PLANT',
        introduction: `<p>Au sein de mon entreprise, il existe une branche contenant plusieurs projets développés en interne permettant de faire évoluer les employés en compétences mais aussi de se préparer à de futurs contrats avec des clients. Cette branche sert aussi à placer les employés, qui n’ont pas de projet client affecté, et c’est ici que j’ai également été placé en attendant d’être affecté à un projet client. Le principe du projet PLANT consiste en la récolte d’information sur les cours d’eau de France afin d’entrainer des réseaux neuronaux pour permettre de faire des prévisions sur le débit, la température ainsi que d’autres paramètres en rapport avec l’eau pour pouvoir la présenter à des centrales nucléaires pour leur système de refroidissement.</p>
                        <p>Ce projet possède donc déjà un existant. En effet lorsque j’arrive sur le projet il est déjà bien en place mais l’équipe est très changeante. Comme les personnes arrivent sur le projet en attendant d’être placées sur un projet client il arrive assez fréquemment que d’un mois à l’autre l’équipe ne soit pas la même.</p>
                        <p>Pour justement parler de l’équipe sur ma période de présence sur ce projet elle a oscillé entre cinq et huit personnes. Comme expliqué précédemment ces projets sont très souvent amenés à avoir leurs effectifs changés tout au long du développement.</p>
                        <p>Enfin pour continuer sur le principe des effectifs changeants, je trouve que c’est un vrai enjeu de maintenir un projet correctement avec une équipe qui change aussi régulièrement. Comme c’est un projet existant il faut une certaine période pour réussir à comprendre comment l’application fonctionne et parfois il arrive qu’une personne a à peine le temps de comprendre le fonctionnement qu’elle est enlevée du projet.</p>`,
        objectif: 'Tout au long de ma présence sur le projet plusieurs objectifs vont se définir par rapport aux tâches que je vais réaliser. Le premier objectif est de récolter les données provenant de l’API de météo France de manière journalière afin de construire une base de données sur les informations météorologiques. Le second est de créer une carte interactive permettant d’afficher les différents cours d’eaux avec les stations de récolte de données de météo France indiquées. Et enfin un dernier objectif consistant à exploiter les données récupérées afin de pouvoir par la suite les utiliser pour l’apprentissage.',
        cHumain: `<p>Au sein du groupe projet et en dépit des grands changements des membres le chef de projet est resté présent tout au long de mon passage sur PLANT. Ensuite le reste du groupe ainsi que moi-même sommes tous des développeurs.</p>
                    <p>Quant au client il n’y a pas de représentant, car comme dit précédemment c’est un projet en interne à l’entreprise. Un cahier des charges est quand même mis en place pour avoir un fil rouge pour le projet. En suivant ce cahier, c’est le chef de projet qui donne la direction du projet avec la création et l’attribution des tâches.</p>`,
        cTechnique: `<p>La technologie principale du projet est le langage Python, sa polyvalence mais aussi son utilisation pour la création de réseau de neurones rend ce langage plus que logique. La base de données qui sera mise en place pendant ma présence sur le projet est réalisée avec le langage SQL, permettant la création d’une base de données relationnelle qui sera utilisée pour stocker les données de l’API Météo France. Enfin une machine virtuelle sur le système d’exploitation Linux ainsi que des conteneurs Docker sont aussi présents et servira à avoir un environnement de production pour le projet ainsi qu’un environnement pour avoir les « jobs » pour la récupération de données de l’API.</p>
                        <p>Aussi une gestion de configuration est mise en place sur l’outil Gitlab, permettant une gestion du code avec plusieurs branches pour séparer les branches dites « stables » des branches de développement pour les différentes fonctionnalités.</p>`,
        enjeu: `L’enjeu principal de ce projet réside dans la bonne récupération des données afin de garantir un entraînement fiable pour le réseau neuronal qui sera mis en place. Pour continuer sur les risques, un qui me semblait majeur était le pouvoir que pouvait avoir notre réseau neuronal pour une centrale nucléaire. Effectivement, si nous entrainons mal le réseau et que les résultats que nous obtenons sont erronés mais pris en compte, et si c’est mis en production cela peut entraîner des conséquences vraiment graves. Un système de refroidissement dans une centrale est quelque chose de vraiment important et très surveillé. Si notre modèle apporte de faux résultats cela pourrait entrainer un dérèglement du système de refroidissement.`,
        organisation: `<p>Durant le projet nous fonctionnons en méthodologie Agile, c’est-à-dire que nous avons une réunion chaque jour en début d’après-midi pour permettre à chacun d’expliquer ses tâches réalisées, les tâches en cours et futures mais aussi d’énoncé des blocages si certaines ont été rencontrés.</p>
                        <p>Concernant la communication avec le client elle n’est pas présente n’ayant pas de client, comme expliqué plusieurs fois c’est un projet qui se veut « interne » et n’a donc pas de représentant pour être client. La personne se rapprochant le plus d’un commanditaire est le chef de projet, qui a accès aux besoins et au cahier des charges et connaît les directions du projet.</p>`,
        realisation: `<h4>Création de la Machine Virtuelle et de l’environnement de production</h4>
                        <p>Ma première grande tâche à mon arrivé sur le projet consiste à créer et configurer la Machine Virtuelle pour lui permettre dans un premier temps de stocker un morceau de code source qui aura pour but d’appeler l’API de Météo France chaque jour pour récupérer les données météorologiques de la journée afin de les conserver dans une base de données. Une problématique à ce moment faisait surface, l’API de Météo France n’avait aucune méthode permettant d’accéder à toutes les données sur plusieurs années. C’est en envoyant une requête journalière que le projet veut créer sa propre base de données météorologique.</p>
                        <p>Pour se faire, j’ai eu accès à une machine virtuelle sous le système d’exploitation Linux, pour mettre en place un environnement pouvant accueillir à la fois du code source qui s’occupera de faire appel à l’API, mais aussi une base de données créé avec le langage SQL et enfin un moyen de contenir un job qui lancera le script d’appel à l’API de manière hebdomadaire qui sera expliqué un peu plus tard. Pour se faire j’ai d’abord essayé de mettre en place un conteneur Docker pouvant accueillir la base de données ainsi que l’hébergé en local. Je suis passé par une image SQL de docker en premier lieu qui était fonctionnel et par la suite j’ai créé un Dockerfile (fichier permettant de créer des conteneurs Docker selon des configurations écrites à l’intérieur) qui au lancement de ce fichier créé un docker container avec l’image récupéré auparavant et des configurations qui feront en sorte que le conteneur reste actif et accessible par une source extérieure.</p>
                        <p>Ensuite j’ai modifié le Dockerfile pour qu’il puisse aussi créer un conteneur pour accueillir le code source qui fera appel à l’API météo France, traitera des données récupérées pour trier et garder seulement celles qui nous intéressent et enverra ensuite ces données à la base de données pour les stocker. Enfin un dernier conteneur qui contiendra le code du Job Python pour lancer le code source de l’appel à l’API de manière quotidienne à une heure précise.</p>
                        <p>Une fois le Dockerfile terminé d’être écris je l’ai relancé pour que les conteneurs soient créés et par la suite j’ai fait les vérifications nécessaires pour m’assurer que les trois conteneurs étaient encore actifs et accessible et que la base de données était bien créée dans le conteneur adéquat avec les bonnes tables présentes à l’intérieur.</p>
                        <h4>Création d’un job pour la requête</h4>
                        <p>Cette fois-ci une tâche qui a été assez courte était donc la création du job pour la requête Python. Le langage permet la configuration de « CronJob », une ligne de commande Linux qui a pour but d’exécuter une tâche de fond sur un planning prédéfini et répétable. Ici le job avait donc pour but d’exécuter le code faisant appel à l’API chaque jour en fin de journée pour récupérer toutes les données récoltées. Pour ce faire, j’ai configuré une tâche cron via un script Bash/Python sans passer par un framework web et par la suite j’ai écrit les lignes permettant de déclencher l’exécution à une heure précise, le Job exécute l’autre code source Python qui s’occupe de l’appel. </p>
                        <p>Pour tester le job j’ai d’abord fait des vérifications séparées, je l’ai mis en place sur la machine virtuelle avec plusieurs horaires prédéfinis et où il me marquait simplement un message dans le terminal de la machine pour vérifier le bon fonctionnement. D’un autre côté j’ai fait des tests pour vérifier que le code pouvait exécuter un autre code sans horaire prédéfinis simplement que dès que je lançais le job je devais avoir un retour d’un code à exécuter. Enfin j’ai assemblé les deux parties une fois le tout fonctionnel, mis en place sur la machine virtuelle et vérifié que à l’heure indiqué la base de données était bel et bien remplis.</p>
                        <h4>Création d’une carte interactive</h4>
                        <p>Au cours du projet, un hackathon réalisé par Météo France a eu lieu. Un hackathon est généralement un rassemblement de plusieurs groupes de développeurs autour d’un sujet et un objectif communs pour essayer une idée ou un produit. Dans notre cas, ce hackathon avait pour but de réaliser un travail original et pratique en se servant de l’API de Météo France mis à disposition. </p>
                        <p>Cette carte a été mise en place entièrement durant la période du hackathon à savoir 48h et a par la suite été réutilisée sur le projet pour d’autres utilités. De mon côté au sein de ce hackaton j’ai réalisé le pop-up qui affiche les données. J’ai donc mis en place un évènement sur le clic d’une antenne pour créer le pop-up, après cela j’ai la requête qui appel l’API de Météo France pour obtenir les données de l’antenne sélectionnée et enfin j’ai trié les données récupérées pour les afficher correctement au sein du pop-up.</p>
                        <p>Cette carte a été mise en place entièrement durant la période du hackathon à savoir 48h et à par la suite été réutilisé sur le projet pour d’autres utilités.</p>`,
        fin: `<p>Après plusieurs mois à avoir travaillé sur le projet je suis affecté à un projet client et vais donc devoir partir de PLANT. Mon départ du projet pendant sa réalisation fût une expérience particulière de mon point de vue, c’était la première fois que cela m’arrivait mais je savais que c’était assez courant au sein d’une entreprise de services informatiques. J’ai pu terminer les quelques dernières tâches qui m’étaient assignées avant mon départ et pu partir sereinement.</p>
                <p>A la suite de mon départ j’ai dû rédiger un document recensant toutes les tâches que j’avais réalisées durant ma présence sur le projet ainsi que des avis sur l’organisation et si le travail que j’ai réalisé m’a plu ou non.</p>`,
        retiens: `<p>Tout d’abord la première chose que je retiens de cette expérience est la mise en pratique en situation réelle de Docker, technologie vue au sein de l’école quelques mois auparavant cela a été le bon moment pour mettre en pratique ce que j’avais vu mais aussi approfondir mes connaissances. J’ai été très content de pouvoir expérimenter cette technologie au sein d’un projet, durant le cursus les cours qui portaient sur Docker était en grande partie théorique ou mis en place dans un petit système ne contenant rien de concret, c’était donc assez difficile de réussir à se projeter quant à la réelle utilité de Docker, maintenant que j’ai pu l’utiliser et le mettre en place en situation réelle j’ai bien mieux compris son utilité et son importance.</p>
                    <p>Aussi j’ai pu observer encore plus la polyvalence du langage Python pour pouvoir mettre des choses vraiment variées en place : de la création des jobs à l’entrainement d’un réseau de neurones. Ce projet survenu peu de temps après ma toute première expérience avec Python fut une expérience complémentaire enrichissante par le fait de mieux comprendre un langage grandement utilisé.</p>
                    <p>Enfin j’ai pu découvrir ce qu’était un hackathon ainsi que l’ambiance pendant son déroulement ce qui m’a donné une envie de réitérer cette expérience. Plusieurs jours de développements intenses pour réaliser un petit projet en concurrence avec d’autres groupes de développeurs permet de faire ressortir un esprit de compétition qui m’est bénéfique pour une meilleure production.</p>
                    <p>Prenant en compte mon projet d’avenir dans ma carrière pour devenir architecte logiciel, la mise en pratique de Docker ainsi que l’approfondissement des notions du langage Python étaient des passages importants de mon point de vue, cela me permettra d’avoir une meilleure vision sur ces technologies à l’avenir.</p>`,
        liensVersRealisations: [],
        liensVersCompetences: ['python', 'sql'],
        nomImage: 'ImagePlant.jpg'
    },
    {
        id: 'qapi',
        titre: 'Qapi',
        introduction: `<p>Pour notre quatrième semestre le but était de voir la mise en place d’une API REST qui contacte la partie interface utilisateur pour mettre en place une gestion de données. Pour se faire j’ai pu intégrer un projet de création d’une application web pour le CNCC (Compagnie Nationale des Commissaires aux Comptes). Les commissaires aux comptes ont l’habitude de faire des audits chez leur client pour vérifier si l’ensemble de leur comptabilité est légal. Ces audits requièrent un nombre assez conséquent de données et de traitement de ces derniers, pour faciliter leur travail il nous a été demandé de réaliser une application leur permettant de renseigner toutes ces données, de les conserver et de pouvoir automatiser tous les traitements nécessaires et d’avoir un affichage de différentes statistiques.</p>
                        <p>A ce moment, aucun existant n’était présent, le besoin du CNCC était un besoin plutôt récent dû à leur habitude de travailler avec les méthodes habituelles de la prise de note à la main et des calculs de la même manière.</p>
                        <p>Mon groupe de projet pour cette fois-ci est composé de cinq personnes, nous avons eu quelques départs au sein de la promotion à la fin de la première année ce qui a permis pour cette année d’avoir des groupes de projet de cinq personnes.</p>
                        <p>Notre enjeu principal pour ce projet était de réussir à retranscrire toutes les informations ainsi que l’importance du traitement des données et leur affichage dans l’application. Un second enjeu de taille était de réussir à mettre en place l’API REST de manière fonctionnelle, c’était la première fois que nous voyions son fonctionnement et sa mise en œuvre.</p>`,
        objectif: 'Une fois le besoin du client pris en compte et plusieurs questions posées à ce dernier nous avons pu déterminer tout d’abord à quoi ressemblerait l’application web mais aussi ce qu’il serait nécessaire d’avoir comme fonctionnalités. Cela nous a permis d’établir plusieurs objectifs, le premier étant d’établir toute la partie conception du projet, ce qui comprend un maquettage de l’application en suivant la charte graphique du commanditaire mais aussi l’architecture de la base de données. Le second objectif consistait en la construction du squelette de l’application avant la mise en place de toute la partie dynamique. Le troisième objectif était de mettre en place ce qu’on appelle le CRUD (Create, Read, Update, Delete), c’est un ensemble de fonctions permettant le traitement de donnée en passant par la création, la lecture, la mise à jour et la suppression de ces données. Enfin le dernier objectif portait sur le calcul des données ainsi que leur affichage et quelques graphiques demandés.',
        cHumain: `<p>Comme dit précédemment, mon groupe de projet se compose de cinq personnes différentes. Nous sommes tous développeurs mais j’endosse aussi le rôle de Scrum master. En effet lors du précédent semestre ainsi que celui-ci nous a appris l’utilisation de la méthodologie agile et donc chaque semestre pour les projets un étudiant au sein de chaque groupe est développeur mais aussi Scrum master pour faire respecter la méthodologie.</p>
                    <p>Quant au commanditaire du projet, comme dit précédemment est le CNCC, représenté par deux commissaires qui font partie du bureau. Ces deux commissaires ont beaucoup réfléchi à la mise en place de cette application et c’est pourquoi ils ont été nommés pour représenter le CNCC.</p>`,
        cTechnique: "La création de l’API s’est faite avec le langage Java, c’est un langage important à connaître et aussi un langage populaire pour réaliser des APIs. Pour la partie interface utilisateur elle a été réalisée en utilisant le framework Angular. Pour la partie base de données, elle est créé à partir du langage SQL et enfin une gestion de configuration a été mise en place en utilisant l’outil Gitlab.",
        enjeu: "Comme énoncé précédemment l’enjeu principal réside en la bonne gestion des données manipulées. La CNCC est un organisme national important manipulant des données touchant sur la légalité des différentes entreprises et il est nécessaire et même important de maintenir les calculs et les informations exacts.",
        organisation: `<p>Ici l’organisation est simple, vu que nous devons mettre en place la méthodologie agile, c’est donc en toute logique que notre organisation tourne autour. Tout d’abord nous avons mis en place un « Product Backlog » qui est une sorte de tableau regroupant toutes les tâches. Ensuite au sein de ce Product Backlog nous avons découper les tâches en action d’un utilisateur de l’application que nous appelons « User Story » ce qui nous permettra d’avoir notre processus. Une fois le Product Backlog remplit nous nous sommes répartit les premières tâches et avons commencé à développer. Une fois une User Story terminée, une autre personne du groupe teste l’implémentation et vérifie que tout fonctionne. Si les tests sont positifs alors le travail est mis en commun. Enfin la dernière partie importante pour l’organisation au sein de l’équipe est ce qu’on appelle des « Scrum meetings », ce sont des réunions quotidiennes, généralement en matinée, avec tous les membres du groupe pour tenir informé de l’avancée de chacun, informer les prochaines tâches à réaliser et enfin demander de l’aide plus promptement si nous avons un blocage.</p>
                        <p>Pour l’organisation avec le client, ça suit la même logique qu’au sein de l’équipe. Afin de correctement mettre en place la méthodologie agile nous avions fixé une réunion hebdomadaire avec les clients pour leur tenir informé de notre avancée et des prochaines étapes du développement avec assez régulièrement des démonstrations sur les fonctionnalités implémentées.</p>`,
        realisation: `<h4>Création d’un questionnaire</h4>
                        <p>La première chose qu’un utilisateur est susceptible de faire lors de ses premières utilisations de l’application est de créer un questionnaire. En effet, hormis les quelques questionnaires déjà présents, il est très probable que l’utilisateur veuille créer son propre audit car souvent les audits envers les entreprises sont très spécifiques sur chacune.</p>
                        <p>Sur la partie de gauche de l’application on peut y voir un bouton « + » au-dessus des questionnaires déjà existants. Ce bouton permet d’afficher le formulaire pour créer un audit. Une fois que l’utilisateur a fini de le remplir, il a une icône qui apparaîtra à la suite des autres pour pouvoir accéder à son audit et pouvoir commencer à le remplir.</p>
                        <h4>Affichage des questionnaires</h4>
                        <p>Comme il était prévu qu’il existe plusieurs questionnaires, nous avions décidé de mettre en place un affichage dynamique pour ces derniers en nous servant de la spécificité d’Angular qui est l’utilisation des composants. Pour se faire nous avions créé un composant permettant d’afficher les questionnaires en fonction de ce qui était récupéré dans la base de données. Lorsqu’un utilisateur crée un questionnaire, ou même ceux déjà mis en place dans l’application sont stockés en base de données. Ces derniers contiennent les différentes questions mais aussi des moyens de différencier quel type de questionnaire c’est.</p>
                        <h4>Base de données</h4>
                        <p>Pour pouvoir stocker toutes les données des squelettes des audits, ainsi que les données renseignées mais aussi les différents utilisateurs nous avons mis en place une base de données relationnel.</p>
                        <h4>Création de l’API</h4>
                        <p>En suivant la création de la base de données il nous fallait un moyen de pouvoir interagir avec cette dernière, c’est pour cela que nous avons mis en place l’API du projet. Cet API nous a principalement servi à la gestion des données en implémentant le CRUD. Lorsqu’un utilisateur faisait une action qui entrainait un impact sur des données stockées dans la base, un appel était fait à l’API avec les diverses informations sur les données puis l’API interagissait avec la base de données pour pouvoir faire les modifications nécessaires.</p>
                        <h4>Affichage des résultats</h4>
                        <p>La dernière partie de l’application et aussi la dernière partie que les utilisateurs utiliseront est l’affichage des résultats. Une fois l’audit entièrement renseigné, des calculs sont fait selon ce qui a été indiqué mais aussi selon le type de questionnaire c’est, et une fois terminé un onglet permettant d’accéder aux résultats de l’audit apparaît. Dans cet onglet les résultats étaient affichés en face des questions à la demande du client mais à la toute fin de l’onglet résultat on pouvait retrouver divers graphiques reprenant les résultats afin d’avoir un meilleur aperçu de l’audit.</p>`,
        fin: `Une fois arrivé à la fin du projet, j’avais mis en place une réunion avec le client pour pouvoir le clore. Pendant celle-ci nous avons fait une démonstration finale de la solution avec toutes les fonctionnalités explorées et quelques tests effectués devant le client pour correctement montrer le fonctionnement. A la suite de quoi nous avons fait part des futures modifications à faire sur l’application car elle n’était pas entièrement terminée mais c’était prévu par le client et l’école. La demande initiale comporter beaucoup plus de fonctionnalité que celles énoncés précédemment. Nous avons donc apporté nos conseils sur les futures implémentations à faire et une fois le procès-verbal de livraison signé nous avons donné l’application au commanditaire.`,
        retiens: `<p>Une fois arrivé à la fin du projet, j’avais mis en place une réunion avec le client pour pouvoir le clore. Pendant celle-ci nous avons fait une démonstration finale de la solution avec toutes les fonctionnalités explorées et quelques tests effectués devant le client pour correctement montrer le fonctionnement. A la suite de quoi nous avons fait part des futures modifications à faire sur l’application car elle n’était pas entièrement terminée mais c’était prévu par le client et l’école. La demande initiale comporter beaucoup plus de fonctionnalité que celles énoncés précédemment. Nous avons donc apporté nos conseils sur les futures implémentations à faire et une fois le procès-verbal de livraison signé nous avons donné l’application au commanditaire.</p>
                    <p>Le second élément que je retiens est la flexibilité d’Angular, la création de l’interface utilisateur permet de créer des applications web dynamiques en limitant les duplications de code et elle facilite aussi sa maintenabilité. Dans une page, il n’est plus nécessaire de chercher dans l’ensemble de la page l’élément à modifier mais simplement le composant qui constitue cet élément, si on suit les bonnes pratiques d’Angular cela donne un gain de temps considérable.</p>
                    <p>Un autre point dont je suis content d’avoir pu prendre parti est le métier de commissaire aux comptes. Travailler sur ce projet et avec le CNCC m’a permis de mieux comprendre leur métier mais aussi d’avoir un pas dedans, en ajoutant les questionnaires et les différents traitements pour les résultats on a pu observer plusieurs pans de ce métier et ce fut une expérience très intéressante.</p>
                    <p>Enfin le dernier point que j’aimerai aborder sera l’apprentissage de deux langages importants et populaires de nos jours qui sont Java et Angular. Ces deux langages sont utilisés dans beaucoup de projet pour leurs avantages respectifs et c’est pour un grand plus de les avoir appris. Grâce à ça j’ai pu être plus à l’aise lors d’une mission en entreprise pendant mon alternance qui utilisait Angular pour la partie interface utilisateur et j’ai donc mis moins de temps à comprendre l’architecture du projet existant.</p>`,
        liensVersRealisations: [],
        liensVersCompetences: ['angular', 'benchmarking', 'agile', 'sql', 'gestion de projet', 'communication', 'adaptation'],
        nomImage: 'PetitLogoQapi.png'
    }
];